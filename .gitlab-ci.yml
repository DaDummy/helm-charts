---
workflow:
  rules:
    - if: "$CI_COMMIT_TAG"
      when: "never"
    - when: "always"

stages:
  - ".pre"
  - "package"
  - "publish"
  - ".post"

.common-semantic-release:
  except:
    - "triggers"
    - "tags"
  image: "registry.souvap-univention.de/souvap/tooling/images/semantic-release:latest"
  stage: "prepare"
  variables:
    GIT_STRATEGY: "clone"
  tags:
    - "docker"

prepare:
  artifacts:
    reports:
      dotenv: "${CI_PROJECT_DIR}/deploy.env"
  extends: ".common-semantic-release"
  script:
    - echo RELEASE_VERSION=$(semantic-release --dry-run --branches $CI_COMMIT_REF_NAME --plugins "@semantic-release/gitlab" | grep -oP "Published release [0-9]+\.[0-9]+\.[0-9]+ on" | grep -oP "[0-9]+\.[0-9]+\.[0-9]+") > ${CI_PROJECT_DIR}/deploy.env
    - "cat ${CI_PROJECT_DIR}/deploy.env"
  stage: ".pre"
  variables:
    GIT_SUBMODULE_STRATEGY: "none"
    GIT_STRATEGY: "clone"
    GIT_DEPTH: "500"

package:
  artifacts:
    paths:
      - "packages/*.tgz"
  dependencies:
    - "prepare"
  needs:
    - "prepare"
  image:
    name: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/alpine/helm:3.10.2"
    entrypoint: [""]
  script:
    - "if [ -z \"${RELEASE_VERSION}\" ]; then exit 0; fi"
    - "helm repo add bitnami https://charts.bitnami.com/bitnami"
    - "helm package --version ${RELEASE_VERSION} --destination ./packages --dependency-update charts/openproject"
  stage: "package"
  tags:
    - "docker"
  variables:
    GIT_DEPTH: 1
    GIT_STRATEGY: "fetch"

publish:
  dependencies:
    - "package"
    - "prepare"
  needs:
    - "package"
    - "prepare"
  image: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/curlimages/curl:latest"
  script:
    - "if [ -z \"${RELEASE_VERSION}\" ]; then exit 0; fi"
    - |
      for _filename in `find packages -type f`;
      do
        curl \
        --request POST \
        --user gitlab-ci-token:$CI_JOB_TOKEN \
        --form "chart=@$_filename" \
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/stable/charts";
      done
  only:
    - "souvap"
  stage: "publish"
  tags:
    - "docker"
  variables:
    GIT_STRATEGY: "none"

release:
  artifacts:
    paths:
      - "CHANGELOG.md"
  except:
    - "web"
  extends: ".common-semantic-release"
  only:
    - "souvap"
  script:
    - |
      if test -f "${CI_PROJECT_DIR}/.releaserc"
      then
        PLUGINS=
      else
        PLUGINS="--plugins @semantic-release/gitlab,@semantic-release/release-notes-generator,@semantic-release/changelog"
      fi
    - "semantic-release --branches $CI_COMMIT_REF_NAME $PLUGINS"
  stage: ".post"
  variables:
    GIT_SUBMODULE_STRATEGY: "none"
    GIT_STRATEGY: "clone"
    GIT_DEPTH: "500"


...
